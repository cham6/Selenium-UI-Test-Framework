package com.gurukula.testgurukula.pages;

import org.openqa.selenium.NoSuchElementException;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.PageFactory;

public class RegistrationPage extends BasePage {

WebDriver driver;
	
	@FindBy(xpath="//h1[text()='Registration']")
	WebElement registrationLabel;
	
	@FindBy(xpath="//input[@name='login']")
	WebElement loginTextBox;
	
	@FindBy(xpath="//input[@name='email']")
	WebElement emailTextBox;
	
	@FindBy(xpath="//input[@name='password']")
	WebElement passwordTextBox;
	
	@FindBy(xpath="//input[@name='confirmPassword']")
	WebElement confirmPasswordloginTextBox;
	
	@FindBy(xpath="//button[text()='Register']")
	WebElement registerButton;
	
	@FindBy(xpath="//div[contains(text(),'Please try again later.')]")
	WebElement registrationFailed;
	
	@FindBy(xpath="//div[contains(text(),'Registeration is successful')]")
	WebElement registrationSuccessful;

	public RegistrationPage(WebDriver wd) {
		super(wd);
		PageFactory.initElements(driver, this);
	}
	
	private void setLogin(String username) {
		if(username == null) {
			return;
		}
		waitForElementToAppear(loginTextBox);
		loginTextBox.sendKeys(username);
	}
	
	private void setEmail(String email) {
		if(email == null) {
			return;
		}
		waitForElementToAppear(emailTextBox);
		emailTextBox.sendKeys(email);
	}
	
	private void setPassword(String password) {
		if(password == null) {
			return;
		}
		waitForElementToAppear(passwordTextBox);
		passwordTextBox.sendKeys(password);
	}
	
	private void setConfirmPassword(String confirmPassword) {
		if(confirmPassword == null) {
			return;
		}
		waitForElementToAppear(confirmPasswordloginTextBox);
		confirmPasswordloginTextBox.sendKeys(confirmPassword);
	}
	
	public void clickRegister() {
		waitForElementToAppear(registerButton);
		registerButton.click();
	}
	
	public boolean isRegisterButtonEnabled() {
		waitForElementToAppear(registerButton);
		return registerButton.isEnabled();
	}
	
	public boolean isRegistrationPage() {
		waitForElementToAppear(registrationLabel);
		return registrationLabel.isDisplayed();
	}
	
	public boolean isRegistrationSuccessful() {
		
		try {
			waitForElementToAppear(registrationSuccessful);
			return registrationSuccessful.isDisplayed();
		} catch(NoSuchElementException nse) {
			System.out.println("'Registration has failed.");
			nse.printStackTrace();
			return false;
		}
	}
	
	public boolean hasLoginFailed() {
		
		try {
			waitForElementToAppear(registrationFailed);
			return registrationFailed.isDisplayed();
		} catch(NoSuchElementException nse) {
			System.out.println("'Registration has been successful.");
			return false;
		}
	}
	
	/**
	 * This method will be exposed to Tests
	 * @param userName
	 * @param password
	 * @throws InterruptedException 
	 */
	public void newUserRegistrationDataEntry(String loginName, String email, 
			String password, String confirmPassword){
		
		setLogin(loginName);
		setEmail(email);
		setPassword(password);
		setConfirmPassword(confirmPassword);
	}
}
