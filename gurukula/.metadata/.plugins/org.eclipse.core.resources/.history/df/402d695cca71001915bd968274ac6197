package com.gurukula.testgurukula.tests;

import java.util.concurrent.TimeUnit;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.testng.Assert;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

import com.gurukula.testgurukula.implementations.TestBaseImpl;
import com.gurukula.testgurukula.pages.ForgotPasswordPage;
import com.gurukula.testgurukula.pages.LoginPage;
import com.gurukula.testgurukula.testData.DataProviders;

public class TestForgotPasswordPage extends TestBaseImpl{

	
	ForgotPasswordPage forgotPasswordPage;
	WebDriver driver;
	
    @BeforeMethod
    public void setUp() {
    	super.setUp();
    	driver = new FirefoxDriver();
        driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
        driver.get(forgotPasswordUri);
    }
    
    @Test(dataProvider="ValidEMailDataProvider", dataProviderClass = DataProviders.class)
    public void testValidForgotPassword(String email) {
    	forgotPasswordPage = new ForgotPasswordPage(driver);
    	forgotPasswordPage.resetPassword(email);
    	Assert.assertTrue(forgotPasswordPage.isResetSuccessful());
    }
    
    @Test(dataProvider="InvalidLoginDataProvider", dataProviderClass = DataProviders.class)
    public void testGurukulaFailedLogin(String username, String password) {
    	loginPage = new LoginPage(driver);
    	loginPage.loginToGurukula(username, password);
    	Assert.assertTrue(loginPage.hasLoginFailed());
    }
    
    @AfterMethod
    public void tearDown() {
    	super.tearDown();
    	System.out.println("Dispose the WebDriver after each test run");
    	driver.quit();
    	
    }
}
